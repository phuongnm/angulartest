// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.pnm.service.impl;

import com.pnm.domain.Contact;
import com.pnm.repo.ContactRepo;
import com.pnm.repo.GlobalSearch;
import com.pnm.service.api.ContactService;
import com.pnm.service.impl.ContactImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ContactImpl_Roo_Service_Impl {
    
    declare parents: ContactImpl implements ContactService;
    
    declare @type: ContactImpl: @Service;
    
    declare @type: ContactImpl: @Transactional(readOnly = true);
    
    public ContactRepo ContactImpl.contactRepo;
    
    @Autowired
    public ContactImpl.new(ContactRepo contactRepo) {
        this.contactRepo = contactRepo;
    }

    @Transactional(readOnly = false)
    public Contact ContactImpl.save(Contact entity) {
        return contactRepo.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void ContactImpl.delete(Long id) {
         contactRepo.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<Contact> ContactImpl.save(Iterable<Contact> entities) {
        return contactRepo.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void ContactImpl.delete(Iterable<Long> ids) {
        List<Contact> toDelete = contactRepo.findAll(ids);
        contactRepo.deleteInBatch(toDelete);
    }
    
    public List<Contact> ContactImpl.findAll() {
        return contactRepo.findAll();
    }
    
    public List<Contact> ContactImpl.findAll(Iterable<Long> ids) {
        return contactRepo.findAll(ids);
    }
    
    public Contact ContactImpl.findOne(Long id) {
        return contactRepo.findOne(id);
    }
    
    public long ContactImpl.count() {
        return contactRepo.count();
    }
    
    public Page<Contact> ContactImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return contactRepo.findAll(globalSearch, pageable);
    }
    
}
